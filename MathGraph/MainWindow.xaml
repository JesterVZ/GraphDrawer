<Window x:Class="MathGraph.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MathGraph" xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        WindowStyle="None" ResizeMode="NoResize" 
        Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="DrawCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" CornerRadius="15" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="#FF00B9FF" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <lvc:CartesianChart Name="SeriesChart" Grid.Column="1" >
            <lvc:CartesianChart.AxisY>
                <lvc:Axis Title="Y"></lvc:Axis>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Title="X"></lvc:Axis>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>
        <Grid VerticalAlignment="Top" Height="30" Background="#FF00B9FF" MouseDown="Grid_MouseDown">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Graph Editor" FontSize="16" FontWeight="Bold" Foreground="White"/>
            <Button HorizontalAlignment="Right" Width="30" Background="{x:Null}" BorderBrush="{x:Null}" Click="Button_Click_2">
                <materialDesign:PackIcon Kind="Close" Foreground="White" Width="28" Height="28"/>
            </Button>
        </Grid>
        <Grid x:Name="MenuGrid" Background="#FF00B9FF" HorizontalAlignment="Left" Width="200">
            <StackPanel>
                <Grid Background="White" Height="100">
                    <ToggleButton HorizontalAlignment="Right" Name="MenuButton" VerticalAlignment="Top" Background="Transparent" BorderBrush="Transparent" Margin="0, 0, 2, 0">
                        <materialDesign:PackIcon Kind="Menu" Width="25" Height="25" Foreground="#FF00B9FF" VerticalAlignment="Center"/>
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="HideStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="MenuGrid" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="200" To="32" Duration="0:0:0.2">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="ShowStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="MenuGrid" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="32" To="200" Duration="0:0:0.2">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>
                </Grid>
                <ListView BorderBrush="Transparent" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListViewItem Height="30">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Sigma" Width="20" Height="20" Foreground="White" VerticalAlignment="Center"/>
                            <ComboBox Name="GraphTypeCombobox" Grid.Column="0" Margin="15, 0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" Height="22" SelectionChanged="GraphTypeCombobox_SelectionChanged">
                                <TextBlock>Y = X^2</TextBlock>
                                <TextBlock>Y = X^n</TextBlock>
                                <TextBlock>Y = X^3</TextBlock>
                                <TextBlock>Y = SIN(X)</TextBlock>
                                <TextBlock>Y = COS(X)</TextBlock>
                                <TextBlock>Y = SQRT(X)</TextBlock>
                            </ComboBox>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem Height="30">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="DebugStepOver" Width="20" Height="20" Foreground="White" VerticalAlignment="Center"/>
                            <Slider Grid.Column="0" Name="StepSlider" Margin="15, 0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" ValueChanged="StepSlider_ValueChanged"/>
                            <TextBlock Grid.Column="0" Name="StepLabelValue" TextAlignment="Center" Foreground="White" Text="Step:" TextWrapping="Wrap" VerticalAlignment="Top" Width="37"/>

                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem Height="30">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ChartAreaspline" Width="20" Height="20" Foreground="White" VerticalAlignment="Center"/>
                            <Button Style="{DynamicResource RoundButtonStyle}" Content="Draw" FontWeight="Bold" FontSize="14" Foreground="#FF00B9FF" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="15, 0, 0, 0" Width="120" Click="Button_Click"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem Height="30">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Cached" Width="20" Height="20" Foreground="White" VerticalAlignment="Center"/>
                            <Button Style="{DynamicResource RoundButtonStyle}" Content="Clear" HorizontalAlignment="Center" FontWeight="Bold" FontSize="14" Foreground="#FF00B9FF" VerticalAlignment="Top" Margin="15, 0, 0, 0" Width="120" Click="Button_Click_1"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem Height="30">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ChartTimelineVariant" Width="20" Height="20" Foreground="White" VerticalAlignment="Center"/>
                            <CheckBox Style="{DynamicResource DrawCheckBoxStyle}" Grid.Column="0" Content="Draw points" Name="DrawPointsCheckBox" FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Left" Margin="15, 0, 0, 0" VerticalAlignment="Top"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem Height="30">
                        <StackPanel Orientation="Horizontal">
                            <TextBox Grid.Column="0" Name="PowerTextBox" IsEnabled="False" HorizontalAlignment="Center" Margin="34, 0, 0, 0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                        </StackPanel>
                    </ListViewItem>
                </ListView>
            </StackPanel>
        </Grid>
    </Grid>
    <!--<Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <ComboBox Name="GraphTypeCombobox" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" Margin="0,22,0,0" Height="22" SelectionChanged="GraphTypeCombobox_SelectionChanged">
            <TextBlock>Y = X^2</TextBlock>
            <TextBlock>Y = X^n</TextBlock>
            <TextBlock>Y = X^3</TextBlock>
            <TextBlock>Y = SIN(X)</TextBlock>
            <TextBlock>Y = COS(X)</TextBlock>
            <TextBlock>Y = SQRT(X)</TextBlock>
        </ComboBox>
        <TextBlock Grid.Column="0" Name="StepLabelValue" HorizontalAlignment="Center" TextAlignment="Center" Margin="0,68,0,0" Text="Step:" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <lvc:CartesianChart Name="SeriesChart" Grid.Column="1" >
            <lvc:CartesianChart.AxisY>
                <lvc:Axis Title="Y"></lvc:Axis>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Title="X"></lvc:Axis>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>
        <Button Content="Draw" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,133,0,0" Width="120" Click="Button_Click"/>
        <Button Content="Clear" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,167,0,0" Width="120" Click="Button_Click_1"/>
        <Slider Grid.Column="0" Name="StepSlider" HorizontalAlignment="Center" Margin="0,89,0,0" VerticalAlignment="Top" Width="120" ValueChanged="StepSlider_ValueChanged"/>
        <CheckBox Grid.Column="0" Content="Draw points" Name="DrawPointsCheckBox" HorizontalAlignment="Left" Margin="15,202,0,0" VerticalAlignment="Top"/>
        <TextBox Grid.Column="0" Name="PowerTextBox" Visibility="Hidden" HorizontalAlignment="Center" Margin="0,233,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
    </Grid>-->
</Window>
